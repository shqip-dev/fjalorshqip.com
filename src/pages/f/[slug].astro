---
import { getSlugDictionary, type Entry } from '../../lib/dictionary.ts';

export async function getStaticPaths() {
  const slugDictionary = await getSlugDictionary();

  let entries = Object.entries(slugDictionary);
  if (entries.length > 15_000) {
    // We have to filter some entries out since cloudflare pages has a limit on 20k files
    const ratio = 15_000 / entries.length;
    entries = entries.filter((_, idx) => idx % 10 < ratio * 10);
  }

  return entries.map(([key, value]) => ({
    params: {
      slug: key,
    },
    props: value,
  }));
}

const { slug } = Astro.params;
const props = Astro.props;
---

<div>Faqja: /f/{slug}</div>
<p>
  {
    Object.values(props).map((e: any) => {
      const entry = e as Entry;
      return (
        <>
          <div>
            <span style="font-size: 1.2em;">{entry.term}</span>{' '}
            {entry.attributes}
            <br />
            <div style="max-width: 800px;margin-left: 30px;">
              {entry.definitions}
            </div>
          </div>
          <br />
        </>
      );
    })
  }
</p>
